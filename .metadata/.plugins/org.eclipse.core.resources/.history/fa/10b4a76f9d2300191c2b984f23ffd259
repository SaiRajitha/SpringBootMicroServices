package com.project1.rest.webservices.restfulwebservices.filtering;

import java.util.Arrays;
import java.util.List;

import org.springframework.http.converter.json.MappingJacksonValue;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.databind.ser.FilterProvider;
import com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
import com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;

@RestController
public class DynamicFiltering {
	
	@GetMapping(path= "/dfiltering")
	public MappingJacksonValue retrieveSomeBean() {
		SomeBean2 someBean2 = new SomeBean2("val1", "val2", "val3");
		
		SimpleBeanPropertyFilter filter =  SimpleBeanPropertyFilter.filterOutAllExcept("field1", "field2");
		
		FilterProvider filters = new SimpleFilterProvider().addFilter("SomeBeanFilter", filter);
		
		MappingJacksonValue mapping = new MappingJacksonValue(someBean2);
		mapping.setFilters(filters);
		return mapping;
		
	}
	
	@GetMapping(path = "/dfiltering-list")
	public MappingJacksonValue retrieveListOfSomeBeans() {
		List<SomeBean2> list = Arrays.asList(new SomeBean2("value1","value2","value3"),
				new SomeBean2("value12","value22","value32"));
		
		SimpleBeanPropertyFilter filter =  SimpleBeanPropertyFilter.filterOutAllExcept("field2", "field3");
		
		FilterProvider filters = new SimpleFilterProvider().addFilter("SomeBeanFilter", filter);
		
		MappingJacksonValue mapping = new MappingJacksonValue(list);
		mapping.setFilters(filters);
		return mapping;		
	}
}
